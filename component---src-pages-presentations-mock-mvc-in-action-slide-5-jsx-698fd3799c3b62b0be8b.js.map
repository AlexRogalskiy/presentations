{"version":3,"sources":["webpack:///./src/pages/presentations/mock-mvc-in-action/slide5.jsx"],"names":["slideControls","currentStep","classNameVisibleIn","visibleClassNameInStep","className","language","style","androidstudio","wrapLines","lineProps","line","includes","backgroundColor"],"mappings":"qHAAA,8EAgFeA,uBAxEA,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACTC,EAAqBC,YAAuBF,GAClD,OACE,yBAAKG,UAAW,gBACd,yBAAKA,UAAW,SAAhB,sBACA,yBAAKA,UAAW,WACd,kBAAC,IAAD,CACEA,UAAWF,EAAmB,GAC9BG,SAAU,OAAQC,MAAOC,KAF3B,2ZAgBA,kBAAC,IAAD,CACEH,UAAWF,EAAmB,GAC9BG,SAAU,OAAQC,MAAOC,KAF3B,uQAYA,kBAAC,IAAD,CACEH,UAAWF,EAAmB,GAC9BG,SAAU,OAAQC,MAAOC,KAF3B,2ZAgBA,kBAAC,IAAD,CACEH,UAAWF,EAAmB,GAC9BG,SAAU,OAAQC,MAAOC,IAAeC,WAAW,EACnDC,UAAW,SAAAC,GAAI,MAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,SAASD,GAAQ,CAACJ,MAAO,CAACM,gBAAiB,2BAA6B,KAHjH,+ZAsB6B,2CAA4C,2CAA4C","file":"component---src-pages-presentations-mock-mvc-in-action-slide-5-jsx-698fd3799c3b62b0be8b.js","sourcesContent":["import React from 'react';\nimport slideControls, {\n  visibleClassNameInStep\n} from '../../../components/slide-controls/slide-controls';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport {androidstudio} from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport './slide5.scss';\n\nconst Slide5 = ({currentStep}) => {\n  const classNameVisibleIn = visibleClassNameInStep(currentStep);\n  return (\n    <div className={'slide slide5'}>\n      <div className={'title'}>100% Code Coverage</div>\n      <div className={'content'}>\n        <SyntaxHighlighter\n          className={classNameVisibleIn(2)}\n          language={'java'} style={androidstudio}>\n          {`\n@PutMapping(\n    path = \"/{externalId}\",\n    headers = {\"Special-Header=XML Babel\"},\n    consumes = MediaType.APPLICATION_JSON_UTF8_VALUE, produces = MediaType.APPLICATION_XML_VALUE)\n@ResponseStatus(HttpStatus.OK)\npublic Beer updateBeerAsXML(\n    @PathVariable(\"externalId\") String externalId, @Validated @RequestBody Beer beer) {\n\n  return beerService.updateBeer(externalId, beer);\n}\n          `}\n        </SyntaxHighlighter>\n        <SyntaxHighlighter\n          className={classNameVisibleIn(3)}\n          language={'java'} style={androidstudio}>\n          {`\n  @Test\n  public void updateBeerAsXML_validBeer_shouldReturnUpdatedBeer(){\n    beerResource.updateBeerAsXML(\"OST.01\", new Beer());\n    verify(mockBeerService, times(1))\n        .updateBeer(Mockito.eq(\"OST.01\"), Mockito.any(Beer.class));\n  }\n          `}\n        </SyntaxHighlighter>\n        <SyntaxHighlighter\n          className={classNameVisibleIn(4)}\n          language={'java'} style={androidstudio}>\n          {`\n@PutMapping(\n    path = \"/{externalId}\",\n    headers = {\"Special-Header=XML Babel\"},\n    consumes = MediaType.APPLICATION_JSON_UTF8_VALUE, produces = MediaType.APPLICATION_XML_VALUE)\n@ResponseStatus(HttpStatus.OK)\npublic Beer updateBeerAsXML(\n    @PathVariable(\"externalId\") String externalId, @Validated @RequestBody Beer beer) {\n\n  return beerService.updateBeer(externalId, beer);\n}\n          `}\n        </SyntaxHighlighter>\n        <SyntaxHighlighter\n          className={classNameVisibleIn(5)}\n          language={'java'} style={androidstudio} wrapLines={true}\n          lineProps={line => ([2, 3, 4, 5, 6, 8].includes(line) ? {style: {backgroundColor: 'rgba(30, 255, 0, 0.36)'}} : {})}>\n          {`\n@PutMapping(\n    path = \"/{externalId}\",\n    headers = {\"Special-Header=XML Babel\"},\n    consumes = MediaType.APPLICATION_JSON_UTF8_VALUE, produces = MediaType.APPLICATION_XML_VALUE)\n@ResponseStatus(HttpStatus.OK)\npublic Beer updateBeerAsXML(\n    @PathVariable(\"externalId\") String externalId, @Validated @RequestBody Beer beer) {\n\n  return beerService.updateBeer(externalId, beer);\n}\n          `}\n        </SyntaxHighlighter>\n      </div>\n    </div>\n  );\n};\n\nexport default slideControls(Slide5, '/presentations/mock-mvc-in-action/slide4', '/presentations/mock-mvc-in-action/slide6', 5);\n"],"sourceRoot":""}