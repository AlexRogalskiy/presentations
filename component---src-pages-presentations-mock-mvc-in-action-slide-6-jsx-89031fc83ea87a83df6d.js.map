{"version":3,"sources":["webpack:///./src/components/slide-controls/slide-controls.jsx","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/pages/presentations/mock-mvc-in-action/slide6.jsx"],"names":["visibleClassNameFromStep","currentStep","step","visibleClassNameInStep","slideControls","WrappedComponent","previousPage","nextPage","totalSteps","props","state","handleOnKeyDown","onKeyDown","bind","self","ReferenceError","render","this","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","event","key","setState","navigate","React","Component","classNameVisibleFrom","className"],"mappings":"mNAKaA,EAA2B,SAAAC,GAAW,OAAI,SAAAC,GAAI,OACvDD,EAAcC,EAAQ,SAAW,YAGxBC,EAAyB,SAAAF,GAAW,OAAI,SAAAC,GAAI,OACrDD,IAAgBC,EAAQ,SAAW,YAoDxBE,IAlDf,SAAuBC,EAAkBC,EAAcC,EAAUC,GAC/D,YAD+E,IAAhBA,MAAa,GAC5E,YACE,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXT,YAAa,GAEf,EAAKU,gBAAkB,EAAKC,UAAUC,KCnB7B,SAAgCC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EDcoB,KALN,EADrB,4CASEE,OAAA,WACE,OAAO,kBAACX,EAAD,iBAAsBY,KAAKR,MAA3B,CAAkCR,YAAagB,KAAKP,MAAMT,gBAVrE,EAaEiB,kBAAA,WACEC,SAASC,iBAAiB,UAAWH,KAAKN,iBAAiB,IAd/D,EAiBEU,qBAAA,WACEF,SAASG,oBAAoB,UAAWL,KAAKN,iBAAiB,IAlBlE,EAqBEC,UAAA,SAAUW,GACR,OAAQA,EAAMC,KACZ,IAAK,OACL,IAAK,YACCP,KAAKP,MAAMT,YAAc,EAC3BgB,KAAKQ,SAAS,CAACxB,YAAagB,KAAKP,MAAMT,YAAc,IAErDyB,YAASpB,GAEX,MACF,IAAK,QACL,IAAK,aACCW,KAAKP,MAAMT,YAAcO,EAC3BS,KAAKQ,SAAS,CAACxB,YAAagB,KAAKP,MAAMT,YAAc,IAErDyB,YAASnB,GAEX,MACF,IAAK,MACL,IAAK,SACHmB,YAAS,OAzCjB,GAAqBC,IAAMC,a,yDEb7B,sDAuCexB,uBAnCA,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,YACT4B,EAAuB7B,YAAyBC,GACtD,OACE,yBAAK6B,UAAW,gBACd,yBAAKA,UAAW,SAAhB,6CACA,wBAAIA,UAAW,WACb,wBAAIA,UAAWD,EAAqB,IAApC,uBAGA,wBAAIC,UAAWD,EAAqB,IAApC,+BAGA,wBAAIC,UAAWD,EAAqB,IAApC,kBAGA,wBAAIC,UAAWD,EAAqB,IAApC,sCAGA,wBAAIC,UAAWD,EAAqB,IAApC,4CAGA,wBAAIC,UAAWD,EAAqB,IAApC,cAGA,wBAAIC,UAAWD,EAAqB,IAApC,sBAGA,wBAAIC,UAAWD,EAAqB,IAApC,uCAQ6B,2CAA4C,2CAA4C","file":"component---src-pages-presentations-mock-mvc-in-action-slide-6-jsx-89031fc83ea87a83df6d.js","sourcesContent":["import React from 'react';\nimport {navigate} from 'gatsby';\n\n\n// eslint-disable-next-line no-confusing-arrow\nexport const visibleClassNameFromStep = currentStep => step =>\n  ((currentStep < step) ? 'hidden' : 'visible');\n\n// eslint-disable-next-line no-confusing-arrow\nexport const visibleClassNameInStep = currentStep => step =>\n  ((currentStep !== step) ? 'hidden' : 'visible');\n\nfunction slideControls(WrappedComponent, previousPage, nextPage, totalSteps = 1) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        currentStep: 1\n      };\n      this.handleOnKeyDown = this.onKeyDown.bind(this);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} currentStep={this.state.currentStep} />;\n    }\n\n    componentDidMount() {\n      document.addEventListener('keydown', this.handleOnKeyDown, false);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleOnKeyDown, false);\n    }\n\n    onKeyDown(event) {\n      switch (event.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          if (this.state.currentStep > 1) {\n            this.setState({currentStep: this.state.currentStep - 1});\n          } else {\n            navigate(previousPage);\n          }\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          if (this.state.currentStep < totalSteps) {\n            this.setState({currentStep: this.state.currentStep + 1});\n          } else {\n            navigate(nextPage);\n          }\n          break;\n        case 'Esc':\n        case 'Escape':\n          navigate('/');\n          break;\n        default:\n      }\n    }\n  };\n}\n\nexport default slideControls;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from 'react';\nimport slideControls, {visibleClassNameFromStep} from '../../../components/slide-controls/slide-controls';\nimport './slide6.scss';\n\nconst Slide4 = ({currentStep}) => {\n  const classNameVisibleFrom = visibleClassNameFromStep(currentStep);\n  return (\n    <div className={'slide slide6'}>\n      <div className={'title'}>Advantages of MockMVC - What can you test</div>\n      <ul className={'content'}>\n        <li className={classNameVisibleFrom(2)}>\n          Contract compliance\n        </li>\n        <li className={classNameVisibleFrom(3)}>\n          Content negotiation headers\n        </li>\n        <li className={classNameVisibleFrom(4)}>\n          Response codes\n        </li>\n        <li className={classNameVisibleFrom(5)}>\n          JSON serialization/deserialization\n        </li>\n        <li className={classNameVisibleFrom(6)}>\n          Availability of request/response headers\n        </li>\n        <li className={classNameVisibleFrom(7)}>\n          Validation\n        </li>\n        <li className={classNameVisibleFrom(8)}>\n          Exception handling\n        </li>\n        <li className={classNameVisibleFrom(9)}>\n          Corner cases and configurations\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default slideControls(Slide4, '/presentations/mock-mvc-in-action/slide5', '/presentations/mock-mvc-in-action/slide7', 9);\n"],"sourceRoot":""}