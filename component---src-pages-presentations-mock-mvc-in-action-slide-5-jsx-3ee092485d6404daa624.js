(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{"7qOj":function(e,a,n){},dZ8g:function(e,a,n){"use strict";n.r(a);var t=n("q1tI"),r=n.n(t),s=n("11OE"),d=n("+ryr"),l=n("b5t6");n("7qOj");a.default=Object(s.a)((function(e){var a=e.currentStep,n=Object(s.c)(a);return r.a.createElement("div",{className:"slide slide5"},r.a.createElement("div",{className:"title"},"100% Code Coverage"),r.a.createElement("div",{className:"content"},r.a.createElement(d.a,{className:n(2),language:"java",style:l.a},'\n@PutMapping(\n    path = "/{externalId}",\n    headers = {"Special-Header=XML Babel"},\n    consumes = MediaType.APPLICATION_JSON_UTF8_VALUE, produces = MediaType.APPLICATION_XML_VALUE)\n@ResponseStatus(HttpStatus.OK)\npublic Beer updateBeerAsXML(\n    @PathVariable("externalId") String externalId, @Validated @RequestBody Beer beer) {\n\n  return beerService.updateBeer(externalId, beer);\n}\n          '),r.a.createElement(d.a,{className:n(3),language:"java",style:l.a},'\n  @Test\n  public void updateBeerAsXML_validBeer_shouldReturnUpdatedBeer(){\n    beerResource.updateBeerAsXML("OST.01", new Beer());\n    verify(mockBeerService, times(1))\n        .updateBeer(Mockito.eq("OST.01"), Mockito.any(Beer.class));\n  }\n          '),r.a.createElement(d.a,{className:n(4),language:"java",style:l.a},'\n@PutMapping(\n    path = "/{externalId}",\n    headers = {"Special-Header=XML Babel"},\n    consumes = MediaType.APPLICATION_JSON_UTF8_VALUE, produces = MediaType.APPLICATION_XML_VALUE)\n@ResponseStatus(HttpStatus.OK)\npublic Beer updateBeerAsXML(\n    @PathVariable("externalId") String externalId, @Validated @RequestBody Beer beer) {\n\n  return beerService.updateBeer(externalId, beer);\n}\n          '),r.a.createElement(d.a,{className:n(5),language:"java",style:l.a,wrapLines:!0,lineProps:function(e){return[2,3,4,5,6,8].includes(e)?{style:{backgroundColor:"rgba(30, 255, 0, 0.36)"}}:{}}},'\n@PutMapping(\n    path = "/{externalId}",\n    headers = {"Special-Header=XML Babel"},\n    consumes = MediaType.APPLICATION_JSON_UTF8_VALUE, produces = MediaType.APPLICATION_XML_VALUE)\n@ResponseStatus(HttpStatus.OK)\npublic Beer updateBeerAsXML(\n    @PathVariable("externalId") String externalId, @Validated @RequestBody Beer beer) {\n\n  return beerService.updateBeer(externalId, beer);\n}\n          ')))}),"/presentations/mock-mvc-in-action/slide4","/presentations/mock-mvc-in-action/slide6",5)}}]);
//# sourceMappingURL=component---src-pages-presentations-mock-mvc-in-action-slide-5-jsx-3ee092485d6404daa624.js.map